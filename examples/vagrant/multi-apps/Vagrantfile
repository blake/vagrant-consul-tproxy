require 'json'

VAGRANT_CONFIGURATION_VERSION = 2

CLOUD_CONFIG_MERGE_SNIPPET = <<-EOF
#cloud-config

# Necessary to merge multiple entries across cloud config files
merge_how:
  - name: list
    settings: [append]
  - name: dict
    settings: [no_replace, recurse_list]
EOF

Vagrant.configure(VAGRANT_CONFIGURATION_VERSION) do |config|

  # Static IPs assigned to the virtual machines
  machine_ips = {
    "consul-server" => "192.168.56.254",
    "node1"         => "192.168.56.20",
    "node2"         => "192.168.56.21",
  }

  config.vm.box = "blakec/ubuntu-22.04-consul-transparent-proxy"

  # Define a basic Consul config which sets bind, advertise, and retry join
  # addresses
  config.vm.cloud_init :user_data, content_type: "text/cloud-config",
      inline: CLOUD_CONFIG_MERGE_SNIPPET + <<~EOF
        write_files:
          - path: /etc/consul.d/vagrant-config.hcl
            permissions: '0640'
            owner: consul:consul
            content: |
              bind_addr = "{{ GetAllInterfaces | include \\"network\\" \\"192.168.56.0/24\\" | attr \\"address\\" }}"
              advertise_addr = "{{ GetAllInterfaces | include \\"network\\" \\"192.168.56.0/24\\" | attr \\"address\\" }}"
              client_addr = "127.0.0.1"

              retry_join = ["#{machine_ips['consul-server']}"]

      EOF

  # Provision a single-node Consul server cluster
  config.vm.define "consul-server" do |machine|
    machine.vm.hostname = "consul"
    machine.vm.network "private_network", ip: machine_ips["consul-server"]

    # Forward port 8500 to this server
    machine.vm.network "forwarded_port", guest: 8500, host: 8500

    # Restart Consul the machine is up to pick up the latest configuration files
    # installed by cloud-init.
    machine.vm.provision "shell", inline: "systemctl restart consul.service"

    # Include custom configuration to make this agent operate as a server
    machine.vm.cloud_init :user_data, content_type: "text/cloud-config",
      inline: CLOUD_CONFIG_MERGE_SNIPPET + <<~EOF
        write_files:
          - path: /etc/consul.d/server.hcl
            permissions: '0640'
            owner: consul:consul
            content: |
              server = true
              bootstrap = true
              bootstrap_expect = 1
              addresses {
                http = "0.0.0.0"
              }
              ui_config {
                enabled = true
              }
      EOF
  end

  config.vm.define "node1", autostart: false do |machine|
    machine.vm.hostname = "node1"
    machine.vm.network "private_network", ip: machine_ips["node1"]

    # Forward port 9090 to this server
    machine.vm.network "forwarded_port", guest: 9090, host: 9090

    # Multi-app VMs
    machine.vm.provision :ansible do |ansible|
      ansible.playbook = "playbooks/provision-multiapp.yaml"
      ansible.galaxy_role_file = "requirements.yaml"
    end
  end

  config.vm.define "node2", autostart: false do |machine|
    machine.vm.hostname = "node2"
    machine.vm.network "private_network", ip: machine_ips["node2"]

    # Forward port 4646 to this server
    machine.vm.network "forwarded_port", guest: 4646, host: 4646

    machine.vm.provision :ansible do |ansible|
      ansible.playbook = "playbooks/provision-orchestrator.yaml"
      ansible.galaxy_role_file = "requirements.yaml"
    end
  end
end
