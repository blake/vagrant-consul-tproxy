## template: jinja
#cloud-config

# Necessary to merge multiple entries across cloud config files
merge_how:
  - name: list
    settings: [append]
  - name: dict
    settings: [no_replace, recurse_list]

# Add users to the system. Users are added after groups are added.
users:
  - default
  - name: envoy
    # Create user as system user with no home directory
    system: true
    # Do not initialize lastlog and faillog for user
    no_log_init: true
    # Disable SSH logins for this user
    ssh_redirect_user: true

# Add HashiCorp and GetEnvoy package repos
{% if v1.variant == 'ubuntu' -%}
apt:
  preserve_sources_list: true
  sources:
    hashicorp_linux_repo:
      source: deb [arch=amd64] https://apt.releases.hashicorp.com $RELEASE main
      # Retrieved from https://www.hashicorp.com/security
      keyid: DA418C88A3219F7B
    getenvoy_repo:
      source: deb [arch=amd64] https://dl.bintray.com/tetrate/getenvoy-deb $RELEASE stable
      # Retrieved from https://getenvoy.io/gpg
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----

        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
        =fl/R
        -----END PGP PUBLIC KEY BLOCK-----
{% else %}
# This must be CentOS
yum_repos:
  # Retrieved from https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
  hashicorp:
    name: HashiCorp Stable - $basearch
    baseurl: https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable
    enabled: true
    gpgcheck: true
    gpgkey: https://rpm.releases.hashicorp.com/gpg
  tetrate-getenvoy-stable:
    name: Tetrate GetEnvoy - Stable
    baseurl: https://rpm.dl.getenvoy.io/public/rpm/el/8/$basearch
    enabled: true
    gpgcheck: true
    gpgkey: https://rpm.dl.getenvoy.io/public/gpg.CF716AF503183491.key
    repo_gpgcheck: true
    sslverify: 1
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt
    metadata_expire: 300
{%- endif %}

package_update: true
packages:
  - jq
  - unzip
{% if v1.variant == 'ubuntu' %}
  - [consul, 1.10.0]
  - [getenvoy-envoy, 1.18.3.p0.g98c1c9e-1p77.gb76c773]
{% else %}
  - [consul, 1.10.0-1]
  - [getenvoy-envoy, 1.18.2.p0.gd362e79-1p75.g76c310e]
{%- endif %}

{% if 'variant' not in v1 -%}
ssh:
  emit_keys_to_console: false
no_ssh_fingerprints: true
ssh_fp_console_blacklist: ['ssh-dsa', 'ssh-rsa', 'ssh-ecdsa', 'ssh-ed25519']
ssh_key_console_blacklist: ['ssh-dsa', 'ssh-rsa', 'ssh-ecdsa', 'ssh-ed25519']
{% endif %}

write_files:
  - path: /etc/consul.d/agent-common.hcl
    permissions: '0640'
    content: |
      connect {
        enabled = true
      }

      ports {
        grpc = 8502
      }

      telemetry {
        disable_compat_1.9 = true
      }
  - path: /srv/consul/service-template.json
    permissions: '0640'
    content: |
      {
        "service": {
          "connect": {
            "sidecar_service": {
              "proxy": {
                "mode": "transparent",
                "transparent_proxy": {
                  "dialed_directly": true
                }
              }
            }
          }
        }
      }
  - path: /usr/local/bin/consul-redirect-traffic
    permissions: '0755'
    content: |
      #!/usr/bin/env bash

      # This is a small wrapper around `consul connect redirect-traffic` which
      # Determines the user ID for the `consul` process and `envoy` sidecar
      # prior to executing the command to install the redirect rules.
      #
      # Syntax is: consul-redirect-traffic <service name>

      # Exit upon receiving any errors
      set -o errexit

      # Obtain user IDs for consul and envoy
      CONSUL_UID=$(id --user consul)
      PROXY_UID=$(id --user envoy)

      # Redirect DNS traffic to Consul using iptables if systemd version < 246
      SYSTEMD_VERSION=$(systemd --version | awk 'NR==1 { print $2 }')

      if [[ ${SYSTEMD_VERSION} < 246 ]]; then
        iptables --table nat --append OUTPUT --destination localhost --proto udp --match udp --dport 53 --jump REDIRECT --to-ports 8600
        iptables --table nat --append OUTPUT --destination localhost --proto tcp --match tcp --dport 53 --jump REDIRECT --to-ports 8600
      fi

      # Define port exclusions
      SSH_PORT=22

      /usr/bin/consul connect redirect-traffic \
        -proxy-id="${1}-sidecar-proxy" \
        -proxy-uid=${PROXY_UID} \
        -exclude-uid=${CONSUL_UID} \
        -exclude-inbound-port=${SSH_PORT}

  - path: /usr/local/bin/consul-cleanup-iptables
    permissions: '0755'
    content: |
      #!/usr/bin/env bash

      # This is a small helper script to clean up iptables rules installed by
      # Consul when the proxy stops or restarts.
      #
      # Syntax is: consul-cleanup-iptables

      # Exit upon receiving any errors
      set -o errexit

      # Remove rules
      iptables --table nat --flush

      # Delete empty chains
      declare -a consul_chains=("INBOUND" "IN_REDIRECT" "OUTPUT" "REDIRECT")

      for i in "${consul_chains[@]}"
      do
        iptables --table nat --delete-chain CONSUL_PROXY_${i}
      done

  - path: /etc/systemd/resolved.conf.d/consul.conf
    permissions: '0644'
    content: |
      [Resolve]
      DNS=127.0.0.1
      Domains=~consul

  - path: /etc/systemd/system/envoy@.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Consul service mesh Envoy proxy for service %i
      After=network.target consul.service
      Requires=consul.service

      [Service]
      Type=simple
      User=envoy
      Group=envoy
      ExecStartPre=+/usr/local/bin/consul-redirect-traffic %i
      ExecStart=/usr/bin/consul connect envoy -sidecar-for=%i
      ExecStopPost=+/usr/local/bin/consul-cleanup-iptables
      Restart=on-failure
      RestartSec=5

      [Install]
      WantedBy=multi-user.target

runcmd:
  - systemctl daemon-reload
